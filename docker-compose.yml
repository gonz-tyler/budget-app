version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: budgetapp-postgres
    environment:
      POSTGRES_DB: budgetapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - budgetapp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: budgetapp-backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/budgetapp
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - budgetapp-network
    restart: unless-stopped

  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: budgetapp-frontend
  #   ports:
  #     - "5173:5173"
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #   depends_on:
  #     - backend
  #   networks:
  #     - budgetapp-network
  #   restart: unless-stopped

volumes:
  postgres_data:

networks:
  budgetapp-network:
    driver: bridge
